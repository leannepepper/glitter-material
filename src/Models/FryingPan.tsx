/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from "three";
import React, { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { GlitterMaterial } from "../glitterMaterial";
import * as dat from "dat.gui";
const gui = new dat.GUI();

const customUniforms = {
  uGlitterSize: { value: 350.0 },
  uGlitterDensity: { value: 0.1 },
};

const debugObject = {
  glitterColor: "#0f0c0c",
};

export function FryingPan({ ...props }) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/gltf/FryingPan.gltf") as any;

  const glitterMaterial = new GlitterMaterial(customUniforms, {
    color: debugObject.glitterColor,
  });

  useEffect(() => {
    gui.addColor(debugObject, "glitterColor").onChange(() => {
      glitterMaterial.color.set(debugObject.glitterColor);
    });
    gui
      .add(customUniforms.uGlitterSize, "value")
      .min(50.0)
      .max(500.0)
      .step(10.0)
      .name("glitterSize");
    gui
      .add(customUniforms.uGlitterDensity, "value")
      .min(0.0)
      .max(1.0)
      .step(0.001)
      .name("glitterDensity");
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Circle.geometry} material={glitterMaterial} />
    </group>
  );
}

useGLTF.preload("./FryingPan.gltf");
